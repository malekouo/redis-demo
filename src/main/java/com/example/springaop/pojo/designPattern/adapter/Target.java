package com.example.springaop.pojo.designPattern.adapter;

//适配器模式(装饰者模式)： 适配器模式把一个类的接口转换成客户端期待的另外一种接口, 从而是原本应用接口不匹配而无法在一起工作的两个类能够在一起工作.
//三个角色{
//Target: 目标接口类, 客户所期待的接口, 目标可以是具体的或者抽象的类, 也可以是接口
//Adaptee: 需要适配的类
//Adapter: 通过包装一个需要的支配器对象, 把原来的接口转换成目标接口
//}
//第一步：创建客户需要的接口标准
//角色： 目标接口
//目标接口类, 客户所期待的接口, 目标可以是具体的或者抽象的类, 也可以是接口
public interface Target {
    //目标接口, 具有标准的接口;这里的标准就是 名称必须是 request
    void request();
}
